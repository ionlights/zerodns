#!/usr/bin/env python3
import os
import itertools
from pathlib import Path
from collections import namedtuple, defaultdict

import click
import pandas as pd

import utils


@click.group()
@click.pass_context
def zerodns(ctx: click.Context) -> None:
    hexids = Path("/config").glob("*.conf")
    hexids = list(filter(lambda x: "local" not in x.stem, hexids))
    hexids = list(map(lambda x: x.stem, hexids))

    humans = [utils.ztc_get_networks(network) for network in hexids]

    tlds = os.getenv("TLDS", "com").split(",")
    tlds = [(tld[1:] if tld.startswith(".") else tld) for tld in tlds]

    zdomains, zhexids, zhumans = [], [], []
    for net, tld in itertools.product(humans, tlds):
        idx = humans.index(net)
        zdomains.append(f"{net}.{tld}")
        zhexids.append(hexids[idx])
        zhumans.append(humans[idx])

    ZeroDNS = namedtuple("ZeroDNS", ("domains", "networks", "readable"))
    ctx.obj = ZeroDNS(zdomains, zhexids, zhumans)


@zerodns.command()
@click.pass_context
def update_hosts(ctx: click.Context) -> None:
    hosts = defaultdict(list)
    hosts["127.0.0.1"].append("localhost")

    for net, tld in zip(ctx.obj.networks, ctx.obj.domains):
        members = utils.ztc_to_host(net, tld)
        for ip, aliases in members.items():
            hosts[ip] += aliases

    with open("/config/hosts", "w") as zthosts:
        for ip, aliases in hosts.items():
            aliases = list(set(aliases))
            zthosts.write(f"{ip:15s} {' '.join(aliases)}\n")


if __name__ == "__main__":
    zerodns()
