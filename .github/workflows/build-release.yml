name: Docker Builds

on:
  release:
    types: [edited, published, ]

jobs:
  build-release:
    runs-on: ubuntu-20.04
    steps:
    - id: checkout
      name: "Checkout"
      uses: actions/checkout@v2
    - id: meta
      name: "Gather Metadata for Container"
      run: |
        echo "::set-output name=tag::$(basename ${{ github.ref }})"
        echo "::set-output name=date::$(date)"
        pip3 install -r ./scripts/requirements.txt -q --no-input
        ./scripts/version-bump $(basename ${{ github.ref }})
    - id: pull-deps-to-build
      name: Get Latest Releases of Depedencies to Build
      run: |
        ./scripts/download-extract "CoreDNS" "coredns/coredns"
        ./scripts/download-extract "ZeroTier" "zerotier/ZeroTierOne"
    - id: login-dockerhub-registry
      name: "Login to DockerHub Registry"
      uses: docker/login-action@v1
      with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN_DOCKER }}
    - id: login-github-package-registry
      name: "Login to GitHub Container Registry"
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_GITHUB }}
    - id: setup-qemu
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: linux/amd64,linux/arm64
    - id: setup-buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - id: build-container
      name: "Build and push Docker images"
      uses: docker/build-push-action@v2.2.1
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ github.repository }}:latest
          ${{ github.repository }}:${{ steps.meta.outputs.tag }}
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.tag }}
        build-args: |
          BUILD_DATE=${{ steps.meta.outputs.date }}
          ZeroDNS=${{ steps.meta.outputs.tag }}
          CoreDNS=${{ steps.meta.outputs.vCoreDNS }}
          ZeroTier=${{ steps.meta.outputs.vZeroTier }}
